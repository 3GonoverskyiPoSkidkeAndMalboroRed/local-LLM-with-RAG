# ВЕРСИЯ 0.0.1
version: '3.8'

services:
  db:
    image: mysql:8.0
    ports:
    # подключение к `docker` в workbench
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-db}
    volumes:  
      - db_data:/var/lib/mysql
      - ./backup_file2.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-123123}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      - DATABASE_URL=mysql+mysqlconnector://root:${MYSQL_ROOT_PASSWORD:-123123}@db:3306/${MYSQL_DATABASE:-db}
      - DEBUG=${DEBUG:-False}
      - OLLAMA_HOST=http://ollama:11434
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "-m", "uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--limit-concurrency", "100", "--backlog", "2048"]
    networks:
      - app-network

  frontend:
    build:
      context: ./vite-soft-ui-dashboard-main
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend
    volumes:
      - ./vite-soft-ui-dashboard-main/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8081/api}
    networks:
      - app-network

  backup:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123123}
    volumes:
      - db_data:/var/lib/mysql
      - ./backup:/backup
    depends_on:
      - db
    command: ["sh", "-c", "mysqldump -h db -u root -p${MYSQL_ROOT_PASSWORD:-123123} ${MYSQL_DATABASE:-db} > /backup/backup_file.sql"]
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "8081:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  # ollama:
  #   image: ollama/ollama:latest
  #   ports:
  #     - "11434:11434"  # Порт, на котором будет доступен Ollama
  #   environment:
  #     - OLLAMA_HOST=http://0.0.0.0:11434
  #   networks:
  #     - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
