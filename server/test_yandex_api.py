#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Yandex Cloud API
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from yandex_ai_service import YandexAIService

async def test_yandex_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Yandex Cloud API"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Yandex Cloud API...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
    service = YandexAIService()
    
    print(f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   API Key: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if service.api_key else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"   Folder ID: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if service.folder_id else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    
    if not service.api_key:
        print("‚ùå API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return False
    
    if not service.folder_id:
        print("‚ùå Folder ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    print("\nüöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...")
    
    test_prompt = "–ü—Ä–∏–≤–µ—Ç"
    test_model = "yandexgpt-lite"
    test_max_tokens = 1000
    test_temperature = 0.6
    
    print(f"üìù –ó–∞–ø—Ä–æ—Å:")
    print(f"   Prompt: {test_prompt}")
    print(f"   Model: {test_model}")
    print(f"   Max tokens: {test_max_tokens}")
    print(f"   Temperature: {test_temperature}")
    
    try:
        result = await service.generate_text(
            prompt=test_prompt,
            model=test_model,
            max_tokens=test_max_tokens,
            temperature=test_temperature
        )
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   Success: {result.get('success', False)}")
        
        if result.get('success'):
            print(f"   Text: {result.get('text', 'N/A')}")
            print(f"   Model: {result.get('model', 'N/A')}")
            print(f"   SDK Used: {result.get('sdk_used', 'N/A')}")
            print(f"   SDK Type: {result.get('sdk_type', 'N/A')}")
            
            if result.get('usage'):
                print(f"   Usage: {result.get('usage')}")
            
            print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"   Error: {result.get('error', 'Unknown error')}")
            print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

if __name__ == "__main__":
    print("üéØ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ Yandex Cloud API...")
    success = asyncio.run(test_yandex_api())
    
    if success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\nüí• –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!")
        sys.exit(1) 