"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Rate Limiting
"""

import requests
import time
import json

BASE_URL = "http://localhost:8000"

def test_rate_limiting():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ rate limiting
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Rate Limiting")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ rate limiting
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ rate limiting:")
    try:
        response = requests.get(f"{BASE_URL}/rate-limit-status")
        if response.status_code == 200:
            print("‚úÖ –°—Ç–∞—Ç—É—Å rate limiting –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   IP: {response.json().get('client_ip')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # –¢–µ—Å—Ç 2: –¢–µ—Å—Ç –ª–æ–≥–∏–Ω–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω 10 –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤ –º–∏–Ω—É—Ç—É)
    print("\n2. –¢–µ—Å—Ç rate limiting –¥–ª—è –ª–æ–≥–∏–Ω–∞:")
    login_data = {"login": "test", "password": "test"}
    
    for i in range(12):  # –ü—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å 12 –∑–∞–ø—Ä–æ—Å–æ–≤ (–±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞)
        try:
            response = requests.post(f"{BASE_URL}/user/login", json=login_data)
            if response.status_code == 429:
                print(f"‚úÖ Rate limit —Å—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ {i+1}: {response.json()}")
                break
            elif response.status_code == 401:
                print(f"   –ó–∞–ø—Ä–æ—Å {i+1}: –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ–∂–∏–¥–∞–µ–º–æ)")
            else:
                print(f"   –ó–∞–ø—Ä–æ—Å {i+1}: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ {i+1}: {e}")
            break
    
    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω 5 –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤ –º–∏–Ω—É—Ç—É)
    print("\n3. –¢–µ—Å—Ç rate limiting –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
    register_data = {
        "login": "testuser",
        "password": "testpass",
        "role_id": 2,
        "department_id": 1,
        "access_id": 1,
        "full_name": "Test User"
    }
    
    for i in range(7):  # –ü—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å 7 –∑–∞–ø—Ä–æ—Å–æ–≤ (–±–æ–ª—å—à–µ –ª–∏–º–∏—Ç–∞)
        try:
            response = requests.post(f"{BASE_URL}/user/register", json=register_data)
            if response.status_code == 429:
                print(f"‚úÖ Rate limit —Å—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ {i+1}: {response.json()}")
                break
            elif response.status_code == 400:
                print(f"   –ó–∞–ø—Ä–æ—Å {i+1}: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–æ–∂–∏–¥–∞–µ–º–æ)")
            else:
                print(f"   –ó–∞–ø—Ä–æ—Å {i+1}: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ {i+1}: {e}")
            break
    
    # –¢–µ—Å—Ç 4: –¢–µ—Å—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ rate limiting
    print("\n4. –¢–µ—Å—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ rate limiting:")
    for i in range(105):  # –ü—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å 105 –∑–∞–ø—Ä–æ—Å–æ–≤ (–±–æ–ª—å—à–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞)
        try:
            response = requests.get(f"{BASE_URL}/check_db_connection")
            if response.status_code == 429:
                print(f"‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π rate limit —Å—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ {i+1}: {response.json()}")
                break
            elif response.status_code == 200:
                print(f"   –ó–∞–ø—Ä–æ—Å {i+1}: OK")
            else:
                print(f"   –ó–∞–ø—Ä–æ—Å {i+1}: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ {i+1}: {e}")
            break
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

def test_rate_limit_headers():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ rate limiting
    """
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ rate limiting:")
    
    try:
        response = requests.get(f"{BASE_URL}/rate-limit-status")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ rate limiting
        headers = response.headers
        rate_limit_headers = [
            'X-RateLimit-Limit',
            'X-RateLimit-Remaining', 
            'X-RateLimit-Reset'
        ]
        
        for header in rate_limit_headers:
            if header in headers:
                print(f"‚úÖ {header}: {headers[header]}")
            else:
                print(f"‚ö†Ô∏è  {header}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_rate_limiting()
    test_rate_limit_headers()

