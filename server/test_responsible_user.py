#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª–∞"
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def test_responsible_user():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª–∞'"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª–∞'...")
    
    # –í—Ö–æ–¥ –∫–∞–∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª–∞
    login_data = {
        "login": "resp_it",
        "password": "resp123"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/user/login", json=login_data)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!")
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data['user']['login']}")
            print(f"   –†–æ–ª—å ID: {data['user']['role_id']}")
            token = data['access_token']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    headers = {"Authorization": f"Bearer {token}"}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    print("\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π...")
    try:
        response = requests.get(f"{BASE_URL}/user/permissions", headers=headers)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã!")
            print(f"   –†–æ–ª—å: {data.get('role_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   –ú–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: {data.get('can_manage_users', False)}")
            print(f"   –ú–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º: {data.get('can_manage_content', False)}")
            print(f"   –ú–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç: {data.get('can_propose_content', False)}")
            print(f"   –ú–æ–∂–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: {data.get('can_review_proposals', False)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    print("\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    proposal_data = {
        "title": "–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç",
        "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
        "access_level": 1,
        "department_id": 1,
        "tag_id": None
    }
    
    try:
        response = requests.post(f"{BASE_URL}/proposals/", json=proposal_data, headers=headers)
        if response.status_code == 201:
            data = response.json()
            print("‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print(f"   ID –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: {data['id']}")
            print(f"   –°—Ç–∞—Ç—É—Å: {data['status']}")
            proposal_id = data['id']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π...")
    try:
        response = requests.get(f"{BASE_URL}/proposals/", headers=headers)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ–ª—É—á–µ–Ω! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(data)}")
            for proposal in data:
                print(f"   - {proposal['title']} (—Å—Ç–∞—Ç—É—Å: {proposal['status']})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—ã—Ç–∫—É –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ)
    print("\nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...")
    try:
        response = requests.get(f"{BASE_URL}/user/users", headers=headers)
        if response.status_code == 403:
            print("‚úÖ –î–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω!")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    test_responsible_user()
