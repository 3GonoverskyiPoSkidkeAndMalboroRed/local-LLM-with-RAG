import axios from 'axios';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Axios —Å –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
const axiosInstance = axios.create({
  baseURL: import.meta.env.VITE_API_URL,
  timeout: 15000, // 15 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
  headers: {
    'Content-Type': 'application/json',
  }
});

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
const MAX_RETRIES = 3;

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
const retryStorage = new Map();

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
axiosInstance.interceptors.request.use(
  config => {
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞
    const requestId = `${config.method}-${config.url}-${Date.now()}`;
    config.requestId = requestId;
    
    // –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ noRetry, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
    if (config.noRetry) {
      config.noRetry = true;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º userId –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ localStorage –∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω
    const userId = localStorage.getItem('userId');
    if (userId) {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º params, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
      if (!config.params) {
        config.params = {};
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º user_id —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∏ URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç user_id –≤ –ø—É—Ç–∏
      if (!config.params.user_id && !config.url.includes(`/user/${userId}/`)) {
        config.params.user_id = userId;
      }
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –≤ –∫–æ–Ω—Å–æ–ª—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    if (import.meta.env.DEV) {
    }
    
    return config;
  },
  error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error);
    return Promise.reject(error);
  }
);

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤
axiosInstance.interceptors.response.use(
  response => {
    // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    if (import.meta.env.DEV) {
    }
    
    // –û—á–∏—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    if (response.config.requestId) {
      retryStorage.delete(response.config.requestId);
    }
    
    return response;
  },
  async error => {
    const originalConfig = error.config;
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏–ª–∏ —É–∂–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    if (!originalConfig || !originalConfig.requestId) {
      return Promise.reject(error);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    const retryCount = retryStorage.get(originalConfig.requestId) || 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å
    const canRetry = !originalConfig.noRetry && // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ noRetry
                    retryCount < MAX_RETRIES && (
      // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö —Å–µ—Ç–∏
      error.message.includes('Network Error') ||
      // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–∏ —Ç–∞–π–º–∞—É—Ç–µ
      error.code === 'ECONNABORTED' ||
      // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö HTTP-—Å—Ç–∞—Ç—É—Å–∞—Ö
      (error.response && [408, 429, 500, 502, 503, 504].includes(error.response.status))
    );
    
    if (canRetry) {
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
      retryStorage.set(originalConfig.requestId, retryCount + 1);
      
      // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ (1s, 2s, 4s, ...)
      const delay = Math.pow(2, retryCount) * 1000;
      
      // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ
      console.warn(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ (${retryCount + 1}/${MAX_RETRIES}) –¥–ª—è ${originalConfig.method?.toUpperCase()} ${originalConfig.url} —á–µ—Ä–µ–∑ ${delay}ms`);
      
      // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
      await new Promise(resolve => setTimeout(resolve, delay));
      
      // –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å
      return axiosInstance(originalConfig);
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    if (error.response) {
      // –û—à–∏–±–∫–∞ —Å –æ—Ç–≤–µ—Ç–æ–º –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
      console.error(`‚ùå –û—à–∏–±–∫–∞ ${error.response.status}: ${originalConfig.method?.toUpperCase()} ${originalConfig.url}`, 
        error.response.data);
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      if (error.response.status === 401) {
        console.warn('üîë –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞');
        localStorage.removeItem('token');
        window.location.href = '/sign-in';
      }
    } else if (error.request) {
      // –ó–∞–ø—Ä–æ—Å –±—ã–ª —Å–¥–µ–ª–∞–Ω, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω
      console.error('‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.request);
    } else {
      // –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }
    
    // –û—á–∏—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö
    retryStorage.delete(originalConfig.requestId);
    
    return Promise.reject(error);
  }
);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –≤ localStorage
const cacheAdapter = () => {
  const cache = new Map();
  
  return async config => {
    // –ö—ç—à–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ GET-–∑–∞–ø—Ä–æ—Å—ã
    if (config.method.toLowerCase() !== 'get' || config.noCache) {
      return axios(config);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –∫—ç—à–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ URL –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const cacheKey = `${config.url}${JSON.stringify(config.params || {})}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∫—ç—à–µ
    const cachedData = cache.get(cacheKey);
    
    if (cachedData) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      return Promise.resolve(cachedData);
    }
    
    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∫—ç—à–µ –Ω–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    const response = await axios(config);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∫—ç—à–µ
    cache.set(cacheKey, response);
    
    return response;
  };
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Axios
export default axiosInstance; 